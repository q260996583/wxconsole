<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:com/console/configs/spring/applicationContext.xml
			classpath:com/console/configs/spring/applicationContext-security.xml
		</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>cardManage.root</param-value>
	</context-param>
	<servlet>
		<servlet-name>SimpleCaptcha</servlet-name>
		<servlet-class>nl.captcha.servlet.SimpleCaptcha</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>Captcha</servlet-name>
		<servlet-class>nl.captcha.servlet.CaptchaServlet</servlet-class>
		<init-param>
			<param-name>cap.border</param-name>
			<param-value>no</param-value>
		</init-param>
		<!--color of the border. Legal values are r,g,b(and optional alpaha) or 
			white,black,etc. Other values will be ignored -->
		<init-param>
			<param-name>cap.border.c</param-name>
			<param-value>black</param-value>
		</init-param>
		<!--thickness of the border around captcha. Legal values are > 0 other 
			values will be ignored. Defaults to one -->
		<init-param>
			<param-name>cap.border.th</param-name>
			<param-value>1</param-value>
		</init-param>

		<init-param>
			<param-name>cap.obscurificator</param-name>
			<!--<param-value>nl.captcha.obscurity.imp.ShadowGimpyImp</param-value> -->
			<!--<param-value>nl.captcha.obscurity.imp.WaterRiple</param-value> -->
			<param-value>nl.captcha.sandbox.TestGimpyImp</param-value>
		</init-param>
		<init-param>
			<param-name>cap.cap.producer</param-name>
			<param-value>nl.captcha.obscurity.DefaultCaptchaIml
			</param-value>
		</init-param>
		<init-param>
			<param-name>cap.word.imp</param-name>
			<param-value>nl.captcha.text.imp.DefaultWordRenderer
			</param-value>
		</init-param>
		<init-param>
			<param-name>cap.text.producer</param-name>
			<!--<param-value>nl.captcha.sandbox.ChineseTextProducer</param-value> -->
			<param-value>nl.captcha.text.imp.DefaultTextCreator
			</param-value>
		</init-param>
		<init-param>
			<param-name>cap.char.arr</param-name>
			<param-value>0,1,2,3,4,5,6,7,8,9</param-value>
		</init-param>
		<!--if default captcha producer is slelected this value represents the 
			amount of chars that are supplied in the captcha. values below 2 are not 
			exepted when omitted defaults to 5 -->
		<init-param>
			<param-name>cap.char.arr.l</param-name>
			<param-value>4</param-value>
		</init-param>
		<init-param>
			<param-name>cap.font.color</param-name>
			<param-value>0,0,0</param-value>
		</init-param>
		<init-param>
			<param-name>cap.bg.imp</param-name>
			<param-value>nl.captcha.obscurity.imp.DefaultBackgroundImp
			</param-value>
		</init-param>
		<!--values can be either red,yellow,blue,cya etc or r,g,b,alpha value -->
		<init-param>
			<param-name>cap.background.c.to</param-name>
			<param-value>255,255,255</param-value>
		</init-param>
		<init-param>
			<param-name>cap.background.c.from</param-name>
			<param-value>180,180,180</param-value>
		</init-param>
		<init-param>
			<param-name>cap.noise.imp</param-name>
			<param-value>nl.captcha.obscurity.imp.DefaultNoiseImp
			</param-value>
		</init-param>
		<init-param>
			<param-name>cap.noise.c</param-name>
			<param-value>22,22,22</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>SimpleCaptcha</servlet-name>
		<url-pattern>/SimpleCaptcha.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Captcha</servlet-name>
		<url-pattern>/Captcha.jpg</url-pattern>
	</servlet-mapping>
	<!-- 用户验证码过滤器
	<filter>
		<filter-name>CodeFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CodeFilter</filter-name>
		<url-pattern>/j_spring_security_check</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	<filter>
		<filter-name>mediaFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>mediaFilter</filter-name>
		<url-pattern>/upload/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>attachFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
 	</filter>
 	<filter-mapping>
		<filter-name>attachFilter</filter-name>
		<url-pattern>/attach/*</url-pattern>
 	</filter-mapping> -->
	<!-- XssFilter
	<filter>
		<filter-name>XssFilter</filter-name>
		<filter-class>com.jiuyv.common.web.xss.XssFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>XssFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	<!-- spring security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	<!-- ================ web文件的cache-control设置 =========================== -->
	<filter>
		<filter-name>NoCache</filter-name>
		<filter-class>com.jiuyv.common.web.filter.ResponseHeaderFilter
		</filter-class>
		<init-param>
			<param-name>Cache-Control</param-name>
			<param-value>no-cache, must-revalidate</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>CacheForWeek</filter-name>
		<filter-class>com.jiuyv.common.web.filter.ResponseHeaderFilter
		</filter-class>
		<init-param>
			<param-name>Cache-Control</param-name>
			<param-value>max-age=604800, public</param-value>
		</init-param>
	</filter>
	<!-- ================ Jasper的图片生成器 结束=========================== -->
	<!-- 密码软键盘 -->
	<servlet>
		<servlet-name>softkbImage</servlet-name>
		<servlet-class>com.jiuyv.common.web.softkb.SoftkbImage</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>softkbImage</servlet-name>
		<url-pattern>/security/softkb</url-pattern>
	</servlet-mapping>
	<filter>
		<filter-name>softkbFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>softkbFilter</filter-name>
		<url-pattern>/softkb_security</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CacheForWeek</filter-name>
		<url-pattern>/images/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CacheForWeek</filter-name>
		<url-pattern>*.js</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CacheForWeek</filter-name>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	<!-- <listener> <listener-class>org.springframework.web.util.WebAppRootListener</listener-class> 
		</listener> <listener> <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> 
		</listener> -->
	<!-- 采用Listener完成Spring容器初始化 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<!-- Spring Introspector Memory leak -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher
		</listener-class>
	</listener>
	<!-- ================ web文件的cache-control结束 =========================== 
		================ Jasper的图片生成器 开始 =========================== -->
	<servlet>
		<servlet-name>ImageServlet</servlet-name>
		<servlet-class>net.sf.jasperreports.j2ee.servlets.ImageServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ImageServlet</servlet-name>
		<url-pattern>/imageForJasper/*</url-pattern>
	</servlet-mapping>
	<!-- <servlet> <servlet-name>CXFServlet</servlet-name> <servlet-class> org.apache.cxf.transport.servlet.CXFServlet 
		</servlet-class> <load-on-startup>1</load-on-startup> </servlet> <servlet-mapping> 
		<servlet-name>CXFServlet</servlet-name> <url-pattern>/services/*</url-pattern> 
		</servlet-mapping> <session-config> <session-timeout>1</session-timeout> 
		</session-config> -->
	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	<!-- <login-config> <auth-method>BASIC</auth-method> </login-config> -->
	<!-- <resource-ref> <description>Oracle DataSource Test</description> <res-ref-name>jdbc/airDb</res-ref-name> 
		<res-type>javax.sql.DataSource</res-type> <res-auth>Container</res-auth> 
		</resource-ref> -->


</web-app>
