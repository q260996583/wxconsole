package com.jiuyv.yl.console.lottery.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TblLotteryWelfareExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public TblLotteryWelfareExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    protected TblLotteryWelfareExample(TblLotteryWelfareExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_lottery_welfare
     *
     * @ibatorgenerated Wed Dec 20 23:49:51 CST 2017
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andMeridIsNull() {
            addCriterion("MERID is null");
            return this;
        }

        public Criteria andMeridIsNotNull() {
            addCriterion("MERID is not null");
            return this;
        }

        public Criteria andMeridEqualTo(String value) {
            addCriterion("MERID =", value, "merid");
            return this;
        }

        public Criteria andMeridNotEqualTo(String value) {
            addCriterion("MERID <>", value, "merid");
            return this;
        }

        public Criteria andMeridGreaterThan(String value) {
            addCriterion("MERID >", value, "merid");
            return this;
        }

        public Criteria andMeridGreaterThanOrEqualTo(String value) {
            addCriterion("MERID >=", value, "merid");
            return this;
        }

        public Criteria andMeridLessThan(String value) {
            addCriterion("MERID <", value, "merid");
            return this;
        }

        public Criteria andMeridLessThanOrEqualTo(String value) {
            addCriterion("MERID <=", value, "merid");
            return this;
        }

        public Criteria andMeridLike(String value) {
            addCriterion("MERID like", value, "merid");
            return this;
        }

        public Criteria andMeridNotLike(String value) {
            addCriterion("MERID not like", value, "merid");
            return this;
        }

        public Criteria andMeridIn(List values) {
            addCriterion("MERID in", values, "merid");
            return this;
        }

        public Criteria andMeridNotIn(List values) {
            addCriterion("MERID not in", values, "merid");
            return this;
        }

        public Criteria andMeridBetween(String value1, String value2) {
            addCriterion("MERID between", value1, value2, "merid");
            return this;
        }

        public Criteria andMeridNotBetween(String value1, String value2) {
            addCriterion("MERID not between", value1, value2, "merid");
            return this;
        }

        public Criteria andSystemTimeIsNull() {
            addCriterion("SYSTEM_TIME is null");
            return this;
        }

        public Criteria andSystemTimeIsNotNull() {
            addCriterion("SYSTEM_TIME is not null");
            return this;
        }

        public Criteria andSystemTimeEqualTo(String value) {
            addCriterion("SYSTEM_TIME =", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeNotEqualTo(String value) {
            addCriterion("SYSTEM_TIME <>", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeGreaterThan(String value) {
            addCriterion("SYSTEM_TIME >", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeGreaterThanOrEqualTo(String value) {
            addCriterion("SYSTEM_TIME >=", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeLessThan(String value) {
            addCriterion("SYSTEM_TIME <", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeLessThanOrEqualTo(String value) {
            addCriterion("SYSTEM_TIME <=", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeLike(String value) {
            addCriterion("SYSTEM_TIME like", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeNotLike(String value) {
            addCriterion("SYSTEM_TIME not like", value, "systemTime");
            return this;
        }

        public Criteria andSystemTimeIn(List values) {
            addCriterion("SYSTEM_TIME in", values, "systemTime");
            return this;
        }

        public Criteria andSystemTimeNotIn(List values) {
            addCriterion("SYSTEM_TIME not in", values, "systemTime");
            return this;
        }

        public Criteria andSystemTimeBetween(String value1, String value2) {
            addCriterion("SYSTEM_TIME between", value1, value2, "systemTime");
            return this;
        }

        public Criteria andSystemTimeNotBetween(String value1, String value2) {
            addCriterion("SYSTEM_TIME not between", value1, value2, "systemTime");
            return this;
        }

        public Criteria andAmtIsNull() {
            addCriterion("amt is null");
            return this;
        }

        public Criteria andAmtIsNotNull() {
            addCriterion("amt is not null");
            return this;
        }

        public Criteria andAmtEqualTo(Long value) {
            addCriterion("amt =", value, "amt");
            return this;
        }

        public Criteria andAmtNotEqualTo(Long value) {
            addCriterion("amt <>", value, "amt");
            return this;
        }

        public Criteria andAmtGreaterThan(Long value) {
            addCriterion("amt >", value, "amt");
            return this;
        }

        public Criteria andAmtGreaterThanOrEqualTo(Long value) {
            addCriterion("amt >=", value, "amt");
            return this;
        }

        public Criteria andAmtLessThan(Long value) {
            addCriterion("amt <", value, "amt");
            return this;
        }

        public Criteria andAmtLessThanOrEqualTo(Long value) {
            addCriterion("amt <=", value, "amt");
            return this;
        }

        public Criteria andAmtIn(List values) {
            addCriterion("amt in", values, "amt");
            return this;
        }

        public Criteria andAmtNotIn(List values) {
            addCriterion("amt not in", values, "amt");
            return this;
        }

        public Criteria andAmtBetween(Long value1, Long value2) {
            addCriterion("amt between", value1, value2, "amt");
            return this;
        }

        public Criteria andAmtNotBetween(Long value1, Long value2) {
            addCriterion("amt not between", value1, value2, "amt");
            return this;
        }
    }
}